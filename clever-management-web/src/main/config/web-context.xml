<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://cxf.apache.org/jaxws 
		http://cxf.apache.org/schemas/jaxws.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://cxf.apache.org/transports/http/configuration
        http://cxf.apache.org/schemas/configuration/http-conf.xsd">	
        
	<import resource="classpath*:env-context.xml" />
	<import resource="classpath*:service-context.xml" />
	
	<context:annotation-config />
	<context:component-scan base-package="edu.zju.bme.clever.management.web" />
	
	<!-- spring security config -->	
	<sec:http pattern="/js/**" security="none" />
	<sec:http pattern="/css/**" security="none" />
	<sec:http pattern="/font/**" security="none" />
	<sec:http pattern="/img/**" security="none" />
	<sec:http pattern="/resources/**" security="none" />
	<sec:http pattern="/upload/**" security="none" />
	<sec:http pattern="/login.html" security="none" />
	
	<sec:http auto-config="true" use-expressions="true" entry-point-ref="restAuthenticationEntryPoint">	
	    
		<sec:intercept-url pattern="/" access="permitAll" />
		<!-- <sec:intercept-url pattern="/" access="isAuthenticated()" /> -->
        
	  	<sec:intercept-url pattern="/authentication" access="isAuthenticated()"/> 
	  	
	  	<sec:intercept-url pattern="/development/api/display/**" access="hasAnyRole('ROLE_API_VIEW', 'ROLE_API_MAINTAIN')" />
	  	<sec:intercept-url pattern="/development/api/maintain/**" access="hasRole('ROLE_API_MAINTAIN')" />
	  	
	  	<sec:intercept-url pattern="/applications/list" access="hasAnyRole('ROLE_APPILCATION_VIEW', 'ROLE_APPILCATION_EDIT')" />
	  	
	    <!-- template deploy -->
	  	<sec:intercept-url pattern="/templates/storage/list/deploy" access="hasRole('ROLE_TEMPLATE_DEPLOY')" />
	  	<sec:intercept-url pattern="/templates/storage/list/deployed" access="hasRole('ROLE_TEMPLATE_DEPLOY')" />
	  	<sec:intercept-url pattern="/templates/storage/action/deploy" access="hasRole('ROLE_TEMPLATE_DEPLOY')" />
	  	<sec:intercept-url pattern="/deployRecords/list" access="hasRole('ROLE_TEMPLATE_DEPLOY')" />
	  	<!-- template verify -->
	  	<sec:intercept-url pattern="/templates/storage/list/verify" access="hasRole('ROLE_TEMPLATE_VERIFY')" />
	  	<sec:intercept-url pattern="/templates/storage/action/approve/id/**" access="hasRole('ROLE_TEMPLATE_VERIFY')" />
	  	<sec:intercept-url pattern="/templates/storage/action/reject/id/**" access="hasRole('ROLE_TEMPLATE_VERIFY')" />
	  	<sec:intercept-url pattern="/templates/storage/action/remove/id/**" access="hasRole('ROLE_TEMPLATE_VERIFY')" />
	  
        <!--template submit  -->
	  	<sec:intercept-url pattern="/templates/storage/action/submit/id/**" access="hasAnyRole('ROLE_TEMPLATE_SUBMIT', 'ROLE_TEMPLATE_BACTH_SUBMIT')" />
	  	<!-- template fallback  -->
	  	<sec:intercept-url pattern="/templates/storage/action/fallback/id/**" access="hasRole('ROLE_API_VIEW')" />
		<!-- template create -->
		<sec:intercept-url pattern="/templates/storage/action/create" access="hasRole('ROLE_TEMPLATE_CREATE')" />
		<!-- template save -->
		<sec:intercept-url pattern="/templates/storage/action/edit/id/**" access="hasRole('ROLE_TEMPLATE_SAVE')" />
		<!-- template edit resource-->
		<sec:intercept-url pattern="/templates/storage/list/edit/draft" access="hasRole('ROLE_TEMPLATE_EDIT')" />
		<sec:intercept-url pattern="/templates/storage/list/edit/published" access="hasRole('ROLE_TEMPLATE_EDIT')" />
		<sec:intercept-url pattern="/archetypes/name/**" access="hasAnyRole('ROLE_TEMPLATE_EDIT', 'ROLE_TEMPLATE_VIEW')" />
		<sec:intercept-url pattern="/archetypes/list/reference" access="hasRole('ROLE_TEMPLATE_EDIT')" />
		
		<!-- template view -->	
		<sec:intercept-url pattern="/templates/storage/name/**" access="hasRole('ROLE_TEMPLATE_VIEW')" />
		<sec:intercept-url pattern="/templates/storage/id/**" access="hasRole('ROLE_TEMPLATE_VIEW')" />
		<sec:intercept-url pattern="/templates/storage/list" access="hasRole('ROLE_TEMPLATE_VIEW')" />
		<sec:intercept-url pattern="/templates/storage/master/id/*" access="hasRole('ROLE_TEMPLATE_VIEW')" />
		<!-- template upload -->
		<sec:intercept-url pattern="/templates/storage/action/upload" access="hasRole('ROLE_TEMPLATE_UPLOAD')" />
		<sec:intercept-url pattern="/templates/storage/action/validate" access="hasRole('ROLE_TEMPLATE_UPLOAD')" />
	   	<!-- archetype view -->
		<sec:intercept-url pattern="/archetypes/list" access="hasRole('ROLE_ARCHETYPE_VIEW')" />
		<sec:intercept-url pattern="/archetypes/master/id/**" access="hasRole('ROLE_ARCHETYPE_VIEW')" />
		<sec:intercept-url pattern="/archetypes/id/**"           access="hasRole('ROLE_ARCHETYPE_VIEW')" />
		<!-- archetype upload -->
		<sec:intercept-url pattern="/archetypes/action/upload" access="hasRole('ROLE_ARCHETYPE_UPLOAD')" />
		<sec:intercept-url pattern="/archetypes/action/validate" access="hasRole('ROLE_ARCHETYPE_UPLOAD')" />
		
		<!-- archetype create -->
		<sec:intercept-url pattern="/archetypes/action/create" access="hasAnyRole('ROLE_ARCHETYPE_CREATE','ROLE_ARCHETYPE_NEW_REVISION','ROLE_ARCHETYPE_NEW_VERSION','ROLE_ARCHETYPE_SPECIALIZE')" />
		<!-- archetype save -->
		<sec:intercept-url pattern="/archetypes/action/edit/id/**" access="hasRole('ROLE_ARCHETYPE_EDIT')" />
		<!-- archetype edit -->
		<sec:intercept-url pattern="/archetypes/list/edit/draft" access="hasRole('ROLE_ARCHETYPE_EDIT')" />
		<sec:intercept-url pattern="/archetypes/list/edit/published" access="hasRole('ROLE_ARCHETYPE_EDIT')" />
		<!-- archetype submit -->
		<sec:intercept-url pattern="/archetypes/action/submit/id/**" access="hasAnyRole('ROLE_ARCHETYPE_SUBMIT','ROLE_ARCHETYPE_BATCH_SUBMIT')" />
		<!-- archetype fallback -->
		<sec:intercept-url pattern="/archetypes/action/fallback/id/**" access="hasRole('ROLE_ARCHETYPE_STATUS_FALLBACK')" />
		<!-- archetype verify -->
		<sec:intercept-url pattern="/archetypes/list/verify**" access="hasRole('ROLE_ARCHETYPE_VERIFY')" />
		<sec:intercept-url pattern="/archetypes/action/approve/id/**" access="hasRole('ROLE_ARCHETYPE_VERIFY')" />
		<sec:intercept-url pattern="/archetypes/action/reject/id/**" access="hasRole('ROLE_ARCHETYPE_VERIFY')" />
		<sec:intercept-url pattern="/archetypes/action/remove/id/**" access="hasRole('ROLE_ARCHETYPE_VERIFY')" />
		<!-- authority -->
		<sec:intercept-url pattern="/authority/**" access="hasRole('ROLE_AUTHORIZE')" />
		
		

	  	
	  	<sec:intercept-url pattern="/**" access="isAuthenticated() and hasRole('ROLE_ADMIN')" />
		<sec:form-login login-page="/#/login"
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-handler-ref="authenticationFailureHandler" 
			username-parameter="username"
			password-parameter="password"/>
		<sec:logout logout-url="/logout" invalidate-session="true" delete-cookies="JSESSIONID"
			success-handler-ref="logoutSuccessHandler" />
		<sec:remember-me remember-me-parameter="remember-me"/>
		<sec:session-management>
			<sec:concurrency-control max-sessions="1"
				error-if-maximum-exceeded="false" expired-url="/#/login" />
		</sec:session-management>
	</sec:http>
	
	<bean id="logoutSuccessHandler"
		class="edu.zju.bme.clever.management.web.util.LogoutSuccessHandlerImpl">
		<constructor-arg value="/" />
	</bean>
	
	
	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider
			user-service-ref="userDetailsService">
		</sec:authentication-provider>
	</sec:authentication-manager>
	<!-- <sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
				<sec:user name="bob" password="bobpassword" authorities="ROLE_USER" />				
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>
	 -->
	<!-- Jmx config -->

    <bean id="serverConnector"
        class="org.springframework.jmx.support.ConnectorServerFactoryBean" depends-on="registry">
	    <property name="objectName" value="connector:name=rmi"/>
	    <property name="serviceUrl"
	            value="service:jmx:rmi://${management.ip}/jndi/rmi://${management.ip}:${jmx.port}/connector"/>
	    <property name="environment">
	    	<map>
	    		<entry key="jmx.remote.authenticator" value-ref="jmxSecurityAuthenticator" />
	    	</map>
	    </property>
	</bean>
	
	<bean id="registry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
    	<property name="port" value="${jmx.port}"/>
	</bean>
	
	<bean class="edu.zju.bme.clever.commons.rest.RestClientSpringImpl" >
		<constructor-arg value="${cdrService.ip}" />
		<constructor-arg value="${cdrService.port}" />
		<constructor-arg value="${cdrService.name}" />
		<constructor-arg value="${cdrService.username}" />
		<constructor-arg value="${cdrService.password}" />
	</bean>
	
</beans>